services:
  webapp:
    container_name: password-manager.front
    build:
      context: ../front
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - 80:80
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
  backend:
    container_name: password-manager.back
    build:
      context: ../back
      dockerfile: Dockerfile
    depends_on:
      - database
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
  database:
    image: postgres:16
    container_name: password-manager.database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - /usr/local/postgresql/films:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5432" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s